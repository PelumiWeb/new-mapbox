[{"C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\index.js":"1","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\reportWebVitals.js":"2","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\App.js":"3","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Test.js":"4","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\PlayerContainer\\PlayerContainer.js":"5","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\GetData\\GetData.js":"6","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\DisplayBox\\DisplayBox.js":"7","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\Music\\Music.js":"8","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\PlayList\\PlayList.js":"9","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\MapBox\\MapBox.js":"10","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\store\\store.js":"11","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\MapBox\\MapBox2.js":"12"},{"size":624,"mtime":1608867182037,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":895,"mtime":1609580101221,"results":"16","hashOfConfig":"14"},{"size":546,"mtime":1607799950489,"results":"17","hashOfConfig":"14"},{"size":10102,"mtime":1609612297487,"results":"18","hashOfConfig":"14"},{"size":417,"mtime":1607738778608,"results":"19","hashOfConfig":"20"},{"size":2336,"mtime":1608784468819,"results":"21","hashOfConfig":"14"},{"size":2187,"mtime":1609477483689,"results":"22","hashOfConfig":"14"},{"size":4166,"mtime":1608832004149,"results":"23","hashOfConfig":"14"},{"size":4588,"mtime":1609633853818,"results":"24","hashOfConfig":"14"},{"size":1157,"mtime":1608832322729,"results":"25","hashOfConfig":"14"},{"size":3729,"mtime":1608231748128,"results":"26","hashOfConfig":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"vdlxi4",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},"1ochm5b",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\index.js",["61","62","63","64"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactWebComponent from \"react-web-component\"\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n// ReactWebComponent.create(<App />, 'my-react-app');\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["65","66"],"C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\reportWebVitals.js",[],"C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\App.js",["67","68","69"],"import './App.css';\nimport PlayerContainer from './Components/PlayerContainer/PlayerContainer'\n// import React, {useEffect, useState} from 'react'\nimport ReactDOM  from 'react-dom'\nimport React from 'react' \n\nimport {StoreProvider} from './store/store'\nimport Testing from './Test'\n// import ReactWebComponent from \"react-web-component\"\nimport reactToWebComponent from \"react-to-webcomponent\";\nimport {BrowserRouter as Router, Route, Switch, useParams } from 'react-router-dom'\n// import { useParams } from 'react-router-dom'\n\n\n\n\nfunction App() {\n\n\n\n return (\n\n  <StoreProvider>\n    <Router>\n      \n  <div className=\"App\">\n  <Route path=\"/\" >\n    <div className=\"style_app\">\n    <PlayerContainer/>\n    </div>\n    </Route>\n  </div>\n  </Router>\n  </StoreProvider>\n \n  );\n}\n\nconst webApp = reactToWebComponent(App, React, ReactDOM);\n\ncustomElements.define(\"web-app\", webApp);\n\n\nexport default App;\n","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Test.js",[],"C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\PlayerContainer\\PlayerContainer.js",["70","71","72"],"import React , {useEffect, useState, useContext} from 'react';\r\nimport './PlayerContainer.css'\r\nimport ListOutlinedIcon from '@material-ui/icons/ListOutlined';\r\nimport MapOutlinedIcon from '@material-ui/icons/MapOutlined';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\nimport Music from '../Music/Music'\r\nimport DisplayBox from '../DisplayBox/DisplayBox'\r\nimport {StoreContext} from '../../store/store'\r\nimport { useObserver } from 'mobx-react';\r\nimport WordLimit from 'react-word-limit'\r\nimport axios from 'axios'\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\nfunction PayerContainer() {\r\n\r\n\tconst {id} = useParams()\r\n\tconsole.log(id)\r\n  let [showImage, setShowImage] = useState(false)\r\n  let [showMap, setShowMap] = useState(false)\r\n  let [showSongs, setShowSongs] = useState(false)\r\n  const store = useContext(StoreContext)\r\n  const [data, setData] = useState()\r\n  const [series, setSeries] = useState()\r\n  const [active1, setActive1] = useState(false)\r\n  const [active2, setActive2] = useState(false)\r\n  const [active3, setActive3] = useState(false)\r\n\r\n\r\n   \r\n  useEffect(() => {\r\n\r\n    const url = \"https://52-90-82-235.maverickmaven.com/geotourdata/json.cfm?h=-107,37,s,en,3A771765\"\r\n\r\n\taxios.get(url).then(response => {\r\n\t\tconst series = response.data.features.filter(elem => {\r\n\t\t  return  elem.type === 'Series'\r\n\t\t})\r\n\t\tsetSeries(series)\r\n\t  })\r\n\r\n\t  axios.get(url).then(response => {\r\n\t\tconst features = response.data.features.filter(elem => {\r\n\t\t  return  elem.type === 'Feature'\r\n\t\t})\r\n\t\tsetData(features)\r\n\t  })\r\n   \r\n},[])\r\n\r\n\r\n\r\n  const displayImage = () => {\r\n\tsetShowImage(!showImage)\r\n\tsetShowMap(false)\r\n\tsetShowSongs(false)\r\n\tsetActive1(true)\r\n\tsetActive2(false)\r\n\tsetActive3(false)\r\n\r\n  }\r\n  const displayMap = () => {\r\n\tsetShowMap(!showMap)\r\n\tsetShowSongs(false)\r\n\tsetShowImage(false)\r\n\tsetActive1(false)\r\n\tsetActive2(false)\r\n\tsetActive3(true)\r\n\r\n  }\r\n  const displaySongs = () => {\r\n\tsetShowSongs(!showSongs)\r\n\tsetShowImage(false)\r\n\tsetShowMap(false)\r\n\tsetActive1(false)\r\n\tsetActive2(true)\r\n\tsetActive3(false)\r\n  }\r\n\r\n  return useObserver(() => (\r\n\t<React.Fragment>\r\n\t<div className=\"style_app\" >\r\n\t   \r\n\t<DisplayBox \r\n\tdisplayImage={showImage}\r\n\tdisplayMap={showMap} \r\n\tdisplaySongs={showSongs}\r\n\t/>\r\n\t</div>\r\n\r\n  <div className=\"audio_player style_app\">\r\n\t<div className=\"title\">\r\n\t{/* <WordLimit limit={15}> */}\r\n\t    {!store?.name ? series?.[0]?.name : store?.name}\r\n\t  {/* </WordLimit>  */}\r\n\t</div>\r\n\t<div className=\"toggle_buttons\">\r\n\t\t<button  className={active2 ? \"active2 iconButtons\" : \"iconButtons\"}>\r\n\t  <ListOutlinedIcon onClick={displaySongs} />\r\n\t  </button>\r\n\t  <button className={active1 ? \"active1 iconButtons\" : \"iconButtons\" }>\r\n\t  <ImageOutlinedIcon onClick={displayImage} />\r\n\t  </button> \r\n\t  <button className={active3 ? \"active3 iconButtons\" : \"iconButtons\" }>\r\n\t  <MapOutlinedIcon onClick={displayMap} />\r\n\t  </button>\r\n\t</div>\r\n\t<div \r\n\tclassName=\"audio_player-container\">             \r\n\t  <Music/>  \r\n   </div>\r\n  <div className=\"tracks\">\r\n\t\t<div className=\"btn\">\r\n\t\t\t<button>\r\n\t\t\t<a id=\"btnPrev\" className=\"btn-icons\"\r\n\t\tonClick ={() => {\r\n\t\t\tconst Index = store.songIndex - 1\r\n\t\t\tstore.addSongIndex(Index)\r\n\t\t\tconst Value = data[Index] \r\n\t\t\tstore.addSong(Value?.assets?.[0].audio)\r\n\t\t\tstore.addName(Value?.name)\r\n\t\t\tstore.addImage(Value?.photo)\r\n\t\t}}\r\n\t\t>&#8617;</a>\r\n\t\t</button>\r\n\t\t<button>\r\n\t\t  <a \r\n\t\t className=\"btn-icons\" \r\n\t\t  id=\"btnNext\" onClick={() => {\r\n\t\t\tconst Index = store.songIndex + 1\r\n\t\t\tstore.addSongIndex(Index)\r\n\t\t\tconst Value = data[Index] \r\n\t\t\tstore.addSong(Value?.assets?.[0].audio)\r\n\t\t\tstore.addName(Value?.name)\r\n\t\t\tstore.addImage(Value?.photo)\r\n\r\n\t\t  }}>&#8618;</a>\r\n\t\t  </button>\r\n\t\t  </div>\r\n\t\t\t\t\t  <select id=\"language\" placeholder=\"Language\" name=\"language\" className=\"language-select\">\r\n\t\t\t\t\t\t  <option title=\"English\" r-value=\"1\" value=\"en\">English</option>\r\n\t\t\t\t\t\t  <option title=\"Afrikaans\" r-value=\"\" value=\"af\" disabled>Afrikaans (af)</option>\r\n\t\t\t\t\t\t  <option title=\"Arabic\" r-value=\"8\" value=\"ar\"\r\n\t\t\t\t\t\t  disabled\r\n\t\t\t\t\t\t  >عربي (ar)</option>\r\n\t\t\t\t\t\t  <option title=\"Azerbaijani\" r-value=\"\" value=\"az\" disabled>Azərbaycanca (az)</option>\r\n\t\t\t\t\t\t  <option title=\"Bambara\" r-value=\"\" value=\"bm\" disabled>Bamanankan (bm)</option>\r\n\t\t\t\t\t\t  <option title=\"Bengali (Bangladesh)\" r-value=\"\" value=\"bn-BD\" disabled>বাংলা (বাংলাদেশ) (bn-BD)</option>\r\n\t\t\t\t\t\t  <option title=\"Bengali (India)\" r-value=\"\" value=\"bn-IN\" disabled>বাংলা (ভারত) (bn-IN)</option>\r\n\t\t\t\t\t\t  <option title=\"Catalan\" r-value=\"\" value=\"ca\" disabled>Català (ca)</option>\r\n\t\t\t\t\t\t  <option title=\"Czech\" r-value=\"\" value=\"cs\" disabled>Čeština (cs)</option>\r\n\t\t\t\t\t\t  <option title=\"Chinese (Simplified)\" r-value=\"9\" value=\"zh-CN\"\r\n\t\t\t\t\t\t  disabled>中文 (简体) (zh-CN)</option>\r\n\t\t\t\t\t\t  <option title=\"Chinese (Traditional)\" r-value=\"\" value=\"zh-TW\" disabled>正體中文 (繁體) (zh-TW)</option>\r\n\t\t\t\t\t\t  <option title=\"Danish\" r-value=\"14\" value=\"da\"\r\n\t\t\t\t\t\t  disabled>Dansk (da)</option>\r\n\t\t\t\t\t\t  <option title=\"German\" r-value=\"10\" value=\"de\"\r\n\t\t\t\t\t\t  disabled>Deutsch (de)</option>\r\n\t\t\t\t\t\t  <option title=\"Ewe\" r-value=\"\" value=\"ee\" disabled>Eʋe (ee)</option>\r\n\t\t\t\t\t\t  <option title=\"Greek\" r-value=\"\" value=\"el\" disabled>Ελληνικά (el)</option>\r\n\t\t\t\t\t\t  <option title=\"Spanish\" r-value=\"5\" value=\"es\"\r\n\t\t\t\t\t\t  disabled>Español (es)</option>\r\n\t\t\t\t\t\t  <option title=\"Persian\" r-value=\"\" value=\"fa\" disabled>فارسی (fa)</option>\r\n\t\t\t\t\t\t  <option title=\"Fulah\" r-value=\"\" value=\"ff\" disabled>Pulaar-Fulfulde (ff)</option>\r\n\t\t\t\t\t\t  <option title=\"Finnish\" r-value=\"\" value=\"fi\" disabled>suomi (fi)</option>\r\n\t\t\t\t\t\t  <option title=\"French\" r-value=\"6\" value=\"fr\"\r\n\t\t\t\t\t\t  disabled>Français (fr)</option>\r\n\t\t\t\t\t\t  <option title=\"French\" r-value=\"7\" value=\"fr-ca\"\r\n\t\t\t\t\t\t  disabled>Français Canadien (fr-ca)</option>\r\n\t\t\t\t\t\t  <option title=\"Frisian\" r-value=\"\" value=\"fy-NL\" disabled>Frysk (fy-NL)</option>\r\n\t\t\t\t\t\t  <option title=\"Irish\" r-value=\"\" value=\"ga-IE\" disabled>Gaeilge (ga-IE)</option>\r\n\t\t\t\t\t\t  <option title=\"Hausa\" r-value=\"\" value=\"ha\" disabled>Hausa (ha)</option>\r\n\t\t\t\t\t\t  <option title=\"Hebrew\" r-value=\"\" value=\"he\" disabled>עברית (he)</option>\r\n\t\t\t\t\t\t  <option title=\"Hindi (India)\" r-value=\"3\" value=\"hi-IN\"\r\n\t\t\t\t\t\t  disabled>हिन्दी (भारत) (hi-IN)</option>\r\n\t\t\t\t\t\t  <option title=\"Croatian\" r-value=\"\" value=\"hr\" disabled>Hrvatski (hr)</option>\r\n\t\t\t\t\t\t  <option title=\"Hungarian\" r-value=\"22\" value=\"hu\"\r\n\t\t\t\t\t\t  disabled>magyar (hu)</option>\r\n\t\t\t\t\t\t  <option title=\"Indonesian\" r-value=\"\" value=\"id\" disabled>Bahasa Indonesia (id)</option>\r\n\t\t\t\t\t\t  <option title=\"Igbo\" r-value=\"\" value=\"ig\" disabled>Igbo (ig)</option>\r\n\t\t\t\t\t\t  <option title=\"Italian\" r-value=\"11\" value=\"it\"\r\n\t\t\t\t\t\t  disabled\r\n\t\t\t\t\t\t  >Italiano (it)</option>\r\n\t\t\t\t\t\t  <option title=\"Japanese\" r-value=\"12\" value=\"ja\"\r\n\t\t\t\t\t\t  disabled>日本語 (ja)</option>\r\n\t\t\t\t\t\t  <option title=\"Georgian\" r-value=\"\" value=\"ka\" disabled>ქართული (ka)</option>\r\n\t\t\t\t\t\t  <option title=\"Kabyle\" r-value=\"\" value=\"kab\" disabled>Taqbaylit (kab)</option>\r\n\t\t\t\t\t\t  <option title=\"Korean\" r-value=\"13\" value=\"ko\"\r\n\t\t\t\t\t\t  disabled>한국어 (ko)</option>\r\n\t\t\t\t\t\t  <option title=\"Lingala\" r-value=\"\" value=\"ln\" disabled>Lingála (ln)</option>\r\n\t\t\t\t\t\t  <option title=\"Malagasy\" r-value=\"\" value=\"mg\" disabled>Malagasy (mg)</option>\r\n\t\t\t\t\t\t  <option title=\"Malayalam\" r-value=\"\" value=\"ml\" disabled>മലയാളം (ml)</option>\r\n\t\t\t\t\t\t  <option title=\"Malay\" r-value=\"\" value=\"ms\" disabled>Melayu (ms)</option>\r\n\t\t\t\t\t\t  <option title=\"Norsk\" r-value=\"21\" value=\"no\" disabled>Norsk (no)</option>\r\n\t\t\t\t\t\t  <option title=\"Burmese\" r-value=\"\" value=\"my\" disabled>မြန်မာဘာသာ (my)</option>\r\n\t\t\t\t\t\t  <option title=\"Dutch\" r-value=\"4\" value=\"nl\"\r\n\t\t\t\t\t\t  disabled>Nederlands (nl)</option>\r\n\t\t\t\t\t\t  <option title=\"Polish\" r-value=\"20\" value=\"pl\"\r\n\t\t\t\t\t\t  disabled>Polski (pl)</option>\r\n\t\t\t\t\t\t  <option title=\"Portuguese (Brazilian)\" r-value=\"\" value=\"pt-BR\" disabled>Português (do Brasil) (pt-BR)</option>\r\n\t\t\t\t\t\t  <option title=\"Portuguese (Portugal)\" r-value=\"15\" value=\"pt-PT\" disabled>Português (Europeu) (pt-PT)</option>\r\n\t\t\t\t\t\t  <option title=\"Romanian\" r-value=\"19\" value=\"ro\" disabled>Română (ro)</option>\r\n\t\t\t\t\t\t  <option title=\"Russian\" r-value=\"16\" value=\"ru\"\r\n\t\t\t\t\t\t  disabled>Русский (ru)</option>\r\n\t\t\t\t\t\t  <option title=\"Songhai\" r-value=\"\" value=\"son\" disabled>Soŋay (son)</option>\r\n\t\t\t\t\t\t  <option title=\"Albanian\" r-value=\"\" value=\"sq\" disabled>Shqip (sq)</option>\r\n\t\t\t\t\t\t  <option title=\"Serbian\" r-value=\"\" value=\"sr\" disabled>Српски (sr)</option>\r\n\t\t\t\t\t\t  <option title=\"Serbian\" r-value=\"\" value=\"sr-Latn\" disabled>Srpski (sr-Latn)</option>\r\n\t\t\t\t\t\t  <option title=\"Swedish\" r-value=\"18\" value=\"sv-SE\"\r\n\t\t\t\t\t\t  disabled\r\n\t\t\t\t\t\t  >Svenska (sv-SE)</option>\r\n\t\t\t\t\t\t  <option title=\"Swahili\" r-value=\"\" value=\"sw\" disabled>Kiswahili (sw)</option>\r\n\t\t\t\t\t\t  <option title=\"Tamil\" r-value=\"\" value=\"ta\" disabled>தமிழ் (ta)</option>\r\n\t\t\t\t\t\t  <option title=\"Thai\" r-value=\"\" value=\"th\" disabled>ไทย (th)</option>\r\n\t\t\t\t\t\t  <option title=\"Tagalog\" r-value=\"\" value=\"tl\" disabled>Tagalog (tl)</option>\r\n\t\t\t\t\t\t  <option title=\"Tswana\" r-value=\"\" value=\"tn\" disabled>Setswana (tn)</option>\r\n\t\t\t\t\t\t  <option title=\"Turkish\" r-value=\"17\" value=\"tr\" disabled>Türkçe (tr)</option>\r\n\t\t\t\t\t\t  <option title=\"Ukrainian\" r-value=\"\" value=\"uk\" disabled>Українська (uk)</option>\r\n\t\t\t\t\t\t  <option title=\"Vietnamese\" r-value=\"\" value=\"vi\" disabled>Tiếng Việt (vi)</option>\r\n\t\t\t\t\t\t  <option title=\"Wolof\" r-value=\"\" value=\"wo\" disabled>Wolof (wo)</option>\r\n\t\t\t\t\t\t  <option title=\"Welsh\" r-value=\"2\" value=\"cy\" disabled>Cymraeg (cy)</option>\r\n\t\t\t\t\t\t  <option title=\"Xhosa\" r-value=\"\" value=\"xh\" disabled>isiXhosa (xh)</option>\r\n\t\t\t\t\t\t  <option title=\"Yoruba\" r-value=\"\" value=\"yo\" disabled>Yorùbá (yo)</option>\r\n\t\t\t\t\t\t  <option title=\"Zulu\" r-value=\"\" value=\"zu\" disabled>isiZulu (zu)</option>\r\n\t\t\t\t\t  </select>\r\n\t\t\t\t  </div>\r\n</div>\r\n</React.Fragment>\r\n  ))\r\n\r\n}\r\n\r\nexport default PayerContainer","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\GetData\\GetData.js",["73","74","75"],"import React, {useState, useEffect} from 'react'\r\nimport axios from \"axios\"\r\n\r\n\r\nexport const  fectchData = () => {\r\n  \r\n    const url = \"https://52-90-82-235.maverickmaven.com/geotourdata/json.cfm?h=-107,37,s,en,3A771765\"\r\n    return (\r\n    axios.get(url)\r\n    .then(response => response.data.features\r\n    ))\r\n}\r\n\r\n\r\n\r\n\r\nexport const useDataMap = async () => {\r\n   const data = await fectchData()\r\n   return data\r\n}",["76","77"],"C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\DisplayBox\\DisplayBox.js",["78","79"],"import React, {useEffect, useState , useContext} from 'react'\r\nimport './DisplayBox.css'\r\nimport axios from 'axios'\r\nimport PlayList from '../PlayList/PlayList'\r\nimport MapBox from '../MapBox/MapBox'\r\nimport {StoreContext} from '../../store/store'\r\nimport Loader from 'react-loader-spinner'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\n\r\n\r\n\r\nfunction DisplayBox({displayImage, displayMap, displaySongs}) {\r\n\r\n    const store = useContext(StoreContext)\r\n\r\n\r\n// const [song, setSong] = useState(null)\r\n    const [data2, setData2] = useState(null)\r\n    const [data, setData] = useState(null)\r\n    const [series, setSeries] = useState(null)\r\n   \r\n    \r\nuseEffect(() => {\r\n\r\n    const url = \"https://52-90-82-235.maverickmaven.com/geotourdata/json.cfm?h=-107,37,s,en,3A771765\"\r\n\r\n    axios({\r\n       method: 'get',\r\n       url,\r\n       responseType: 'stream'\r\n    }).then(response => {\r\n        let features = response.data.features.filter(elem => {\r\n            return  elem.type === 'Feature'\r\n          })\r\n        \r\n             setData(features)\r\n        \r\n })\r\n axios.get(url).then(response => {\r\n    const series = response.data.features.filter(elem => {\r\n      return  elem.type === 'Series'\r\n    })\r\n    setSeries(series)\r\n  })\r\n\r\n   \r\n},[])\r\n\r\n    return (\r\n     <div className={displayImage || displayMap || displaySongs? \"display_box display_box-show\" : \"show_box\"}>\r\n         {console.log(series?.[0].photo)}\r\n            <div className={displayImage ? \"image image_show\" : \"image\"}>\r\n                {\r\n                    !store.image &&  !series?.[0].photo? \r\n                    <Loader\r\n                    type=\"ThreeDots\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                 />  :\r\n                <img src={!store.image ? series?.[0].photo : store.image } alt=\"\"/>\r\n                }\r\n            </div>\r\n            <div className={displayMap ? 'Map Map_show' : 'Map'}>\r\n            <MapBox />\r\n            </div>\r\n        <div className={displaySongs ? \"play_list play_list-show border\" : \"play_list border-2\"}>\r\n        <PlayList \r\n         displaySongs={displaySongs}\r\n         data={data}\r\n         series={series}/>\r\n        </div>\r\n       \r\n    </div>\r\n\r\n   \r\n\r\n    )\r\n}\r\n\r\nexport default DisplayBox\r\n\r\n\r\n//rce & rcc","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\Music\\Music.js",["80","81","82","83","84","85","86","87"],"import { useObserver } from 'mobx-react'\r\nimport React , {useEffect, useState, useContext} from 'react'\r\nimport ReactAudio from 'react-audio-player'\r\nimport './Music.css'\r\nimport {StoreContext} from '../../store/store' \r\nimport axios from 'axios'\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Music({}) {\r\n  const {id} = useParams()\r\n\tconsole.log(id)\r\n  const store = useContext(StoreContext)\r\n const [data, setData] = useState(null)\r\n const [series, setSeries] = useState(null)\r\n\r\n const [music, setMusic] = useState()\r\n const [duration, setDuration] = useState(null)\r\n  \r\n\r\n\r\n  useEffect(() =>  {\r\n\r\n    const url = \"https://52-90-82-235.maverickmaven.com/geotourdata/json.cfm?h=-107,37,s,en,3A771765\"\r\n\r\n    axios({\r\n       method: 'get',\r\n       url,\r\n       responseType: 'stream'\r\n    }).then(response => {\r\n        let features = response.data.features.filter(elem => {\r\n            return  elem.type === 'Feature'\r\n          })\r\n            let Series = response.data.features.filter(elem => {\r\n                    return  elem.type === 'Series'\r\n                })\r\n            // let allData = response.data.features.map(el => {\r\n            //   return el \r\n            //  })\r\n            //  setBothFeatuesAndSeries(allData)\r\n\t\t\t setData(features)\r\n\t\t\r\n       axios.get(url).then(response => {\r\n        const series = response.data.features.filter(elem => {\r\n          return  elem.type === 'Series'\r\n        })\r\n        setSeries(series)\r\n      })\r\n    \r\n            \r\n })\r\n\r\n   \r\n},[])\r\n\r\nconst handleLoadMetadata = (meta) => {\r\n\r\n  const {duration} = meta.target;\r\n\r\n }\r\n\r\n      \r\n\r\n   return useObserver(() => (\r\n\r\n    <div className='Music'>\r\n    <ReactAudio \r\n    className={'audio'}\r\n    src={!store.currentSong ? series?.[0].assets[0].audio : store.currentSong  }\r\n  \r\n    controls\r\n    autoPlay={false}\r\n    onEnded={() => {\r\n      const Index = 0\r\n\t\t\tconst Value = series[Index] \r\n\t\t\tstore.addSong(Value?.assets?.[0].audio)\r\n\t\t\tstore.addName(Value.name)\r\n      store.addImage(Value.photo)\r\n    console.log('Ended')\r\n\r\n    }}\r\n    \r\n  onLoadedMetadata={handleLoadMetadata}\r\n    \r\n    /> \r\n </div>\r\n   ))\r\n             \r\n  \r\n}\r\n\r\nexport default Music\r\n","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\PlayList\\PlayList.js",["88","89","90","91","92","93","94","95","96","97"],"import React, { useState, useContext , useEffect } from 'react'\r\nimport './PlayList.css'\r\nimport WordLimit from 'react-word-limit'\r\nimport {StoreContext} from '../../store/store'\r\nimport { useObserver } from 'mobx-react'\r\nimport Loader from 'react-loader-spinner'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport axios from 'axios'\r\n\r\n\r\nfunction PlayList({displaySongs,data, series}) {\r\n    const [seriesDuration, setSeriesDuration] = useState(null)\r\n    const [featuresDuration, setFeaturesDuration] = useState([])\r\n    const durationArray = []\r\n\r\n    const store = useContext(StoreContext)\r\n   const active = \"red\"\r\n    useEffect( () => {\r\n        // const url = \"https://52-90-82-235.maverickmaven.com/geotourdata/json.cfm?h=-107,37,s,en,3A771765\"\r\n\r\n    }, [])\r\n\r\n\r\n    const currentSeries = series?.map(series => {\r\n            const audio = document.createElement('audio')\r\n            audio.src = series.assets[0].audio\r\n       audio.addEventListener('loadedmetadata', function () {\r\n                const duration = audio.duration\r\n                setSeriesDuration(Math.floor(duration))      \r\n            })\r\n    })\r\n \r\n    useEffect(() => {\r\n        const currentData = data?.map(data => {\r\n            const audio = document.createElement('audio')\r\n            audio.src = [data.assets[0].audio]\r\n       audio.addEventListener('loadedmetadata', function () {\r\n                const duration = audio.duration\r\n                setFeaturesDuration([duration])   \r\n                // console.log(duration)\r\n                // durationArray.push(duration)\r\n             \r\n            })\r\n    })\r\n  \r\n    }, [])\r\n    \r\n    \r\n   \r\n    \r\n   \r\n   \r\n\r\n  \r\n    return useObserver(() => (\r\n      \r\n        <React.Fragment> \r\n             {\r\n                !data ?  \r\n             <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n        \r\n             /> :\r\n        <div className={displaySongs ? \"Playlist Playlist_show\" : \"Playlist\"}>\r\n         <ul className=\"Paylist-list\">    \r\n               \r\n         {series?.map((series, index) => {\r\n             return (\r\n                <li \r\n                className=\"series_playlist\"\r\n                onClick={(e) => {\r\n                    e.preventDefault()\r\n                 \r\n                    store.addSong(series.assets[0].audio)\r\n                    store.addImage(series.photo)\r\n                    store.addName(series.name)\r\n                    store.addSongIndex(index - 1)\r\n                }}\r\n                key={series?.id}>\r\n                <div className=\"plItem\">\r\n                   <span className=\"trackNumber\">{index}</span> \r\n                   <span className=\"trackTitle\">\r\n                      <WordLimit limit={35}>\r\n                       {series ? series.name : \"word\"}\r\n                       </WordLimit> \r\n                    </span> \r\n                \r\n                 </div>\r\n                 </li>\r\n             )\r\n         })}\r\n            \r\n             {data?.map((data, index) => {\r\n                 return(\r\n                  <li \r\n                    //  \r\n                  onClick={(e) => {\r\n                    e.preventDefault()\r\n                      store.addSong(data.assets[0].audio)\r\n                      store.addImage(data.photo)\r\n                      store.addName(data.name)\r\n                      store.addSongIndex(index)\r\n                  }}\r\n                  className={store.currentSong === data.assets[0].audio ? \"playlistActive\" : undefined }\r\n                  key={data?.id}>\r\n                  <div className=\"plItem\">\r\n                     <span className=\"trackNumber\">{index + 1}</span> \r\n                     <span className=\"trackTitle\">\r\n                     <WordLimit limit={35}>\r\n                         {data ? data.name : \"word\"}\r\n                         </WordLimit>\r\n                      </span> \r\n                   </div>\r\n                   </li>\r\n                 )\r\n             } \r\n              )}\r\n        </ul>   \r\n    </div>\r\n        }\r\n    </React.Fragment>\r\n    ))\r\n   \r\n}\r\n\r\nexport default PlayList\r\n","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\MapBox\\MapBox.js",["98","99","100","101","102"],"import React, {useState,useEffect,useContext, useRef} from 'react'\r\nimport ReactMapGL,{Marker, Popup, FlyToInterpolator} from 'react-map-gl'\r\n// import useSupercluster from 'use-supercl'\r\nimport axios from 'axios'\r\nimport './MapBox.css'\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport {StoreContext} from '../../store/store'\r\nimport Loader from 'react-loader-spinner'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\n\r\nimport { useObserver } from 'mobx-react';\r\n\r\n\r\nfunction MapBox () {\r\n    const store = useContext(StoreContext)\r\n    const width = 350;\r\n    const map = useRef()\r\n\r\n    const styleMap = () => {\r\n      <div></div>\r\n    }\r\n  \r\n\r\n\r\n    const [viewport, setViewport] = useState({\r\n        width: \"100%\",\r\n        height: 333,\r\n        latitude: 37.93778,\r\n        longitude: -107.81136,\r\n        zoom: 15,  \r\n    })\r\n\r\n\r\n    // const mapRef = useRef()\r\n   \r\n\r\n    const accessKey ='pk.eyJ1Ijoid3d3bWFzdGVyMSIsImEiOiJjazZmbmxhYngwYjQxM2xtdDdwMjJzYjdnIn0._QtAdUTg9NtC9_R8Caq6Ng'\r\n\r\n    const [features, setFeatures] = useState(null)\r\n    const [series, setSeries] = useState(null)\r\n\r\n    const [selectedCoordinates, setSelectedCoordinates] = useState(null)\r\n    const [currentSong, setCurrentSong] = useState(null)\r\n    useEffect(() => {\r\n        const url = \"https://52-90-82-235.maverickmaven.com/geotourdata/json.cfm?h=-107,37,s,en,3A771765\"\r\n\r\n        axios.get(url).then(response => {\r\n      const features = response.data.features.filter(elem => {\r\n        return  elem.type === 'Feature'\r\n      })\r\n      setFeatures(features)\r\n    })\r\n\r\n    axios.get(url).then(response => {\r\n      const series = response.data.features.filter(elem => {\r\n        return  elem.type === 'Series'\r\n      })\r\n      setSeries(series)\r\n    })\r\n    const addClass = () => {\r\n      const mapBox = (map.current.getMap())\r\n      return mapBox.ClassList.add('map_Styled')\r\n    }\r\n\r\n    console.log(addClass)\r\n     \r\n}, [])\r\n\r\n    return useObserver(() => (\r\n      <React.Fragment>\r\n        \r\n\r\n        { !features && !series ?  \r\n         <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n        \r\n             /> : \r\n        <div> \r\n        <ReactMapGL \r\n      ref={map}\r\n      {...viewport}\r\n      mapboxApiAccessToken={accessKey}\r\n      mapStyle='mapbox://styles/mapbox/dark-v10'\r\n      onViewportChange={viewport => {\r\n          setViewport(viewport)\r\n      }} >\r\n       {features?.map(features => \r\n   \r\n          (<Marker key={features.id} latitude={features.geometry.coordinates[1]}\r\n          longitude={features.geometry.coordinates[0]}\r\n          className={store.currentSong === features.assets[0].audio ? \"mapActive marker\" : \"marker\" }\r\n          >\r\n              <div \r\n              onClick={\r\n      (e) => {\r\n          e.preventDefault()\r\n          console.log(e)\r\n  setSelectedCoordinates(features)\r\n    store.addSong(selectedCoordinates?.assets[0].audio)\r\n    store.addImage(features.photo)\r\n    store.addName(features.name)\r\n      } }>\r\n                 <RoomIcon />\r\n              </div>\r\n          </Marker>)\r\n         )}\r\n\r\n         {selectedCoordinates &&\r\n         (<Popup \r\n         latitude={selectedCoordinates.geometry.coordinates[1]}\r\n         longitude={selectedCoordinates.geometry.coordinates[0]}\r\n         onClose={(e) =>{\r\n             setSelectedCoordinates(null)\r\n         }}\r\n         >\r\n             <div className=\"popup\">\r\n              <h1 className=\"popup_header\">{selectedCoordinates.name}</h1>\r\n              <p className=\"popup_paragraph_right\">{selectedCoordinates.type}</p>\r\n              <p className=\"popup_paragraph_left\">{selectedCoordinates.languages[0]}</p>\r\n              <p className=\"popup_paragraph\">{selectedCoordinates.summary}</p>\r\n\r\n             </div>\r\n         </Popup>)}\r\n\r\n         {\r\n           series?.map(series => \r\n          \r\n            <Marker key={series.id} latitude={series.geometry.coordinates[1]}\r\n          longitude={series.geometry.coordinates[0]}>\r\n              <div className=\"marker-series\"\r\n                \r\n              onClick={\r\n      (e) => {\r\n          e.preventDefault()\r\n          console.log(e)\r\n  setSelectedCoordinates(series)\r\n    store.addSong(selectedCoordinates?.assets[0].audio)\r\n    store.addImage(series.photo)\r\n    store.addName(series.name)\r\n      } }>\r\n                 <RoomIcon />\r\n              </div>\r\n          </Marker>\r\n            )\r\n         } \r\n       </ReactMapGL>\r\n       </div>\r\n       }  \r\n       </React.Fragment>\r\n\r\n    ))\r\n\r\n}\r\n\r\nexport default MapBox","C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\store\\store.js",[],"C:\\Users\\Pelumi\\Desktop\\mapbox-new\\src\\Components\\MapBox\\MapBox2.js",[],{"ruleId":"103","severity":1,"message":"104","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"103","severity":1,"message":"107","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":16},{"ruleId":"103","severity":1,"message":"108","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":11},{"ruleId":"103","severity":1,"message":"109","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":25},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"103","severity":1,"message":"114","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":15},{"ruleId":"103","severity":1,"message":"115","line":11,"column":41,"nodeType":"105","messageId":"106","endLine":11,"endColumn":47},{"ruleId":"103","severity":1,"message":"116","line":11,"column":49,"nodeType":"105","messageId":"106","endLine":11,"endColumn":58},{"ruleId":"103","severity":1,"message":"117","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":17},{"ruleId":"118","severity":1,"message":"119","line":115,"column":4,"nodeType":"120","endLine":124,"endColumn":4},{"ruleId":"118","severity":1,"message":"119","line":127,"column":5,"nodeType":"120","endLine":137,"endColumn":8},{"ruleId":"103","severity":1,"message":"104","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"103","severity":1,"message":"121","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":24},{"ruleId":"103","severity":1,"message":"122","line":1,"column":26,"nodeType":"105","messageId":"106","endLine":1,"endColumn":35},{"ruleId":"110","replacedBy":"123"},{"ruleId":"112","replacedBy":"124"},{"ruleId":"103","severity":1,"message":"125","line":18,"column":12,"nodeType":"105","messageId":"106","endLine":18,"endColumn":17},{"ruleId":"103","severity":1,"message":"126","line":18,"column":19,"nodeType":"105","messageId":"106","endLine":18,"endColumn":27},{"ruleId":"127","severity":1,"message":"128","line":11,"column":16,"nodeType":"129","messageId":"130","endLine":11,"endColumn":18},{"ruleId":"103","severity":1,"message":"131","line":15,"column":9,"nodeType":"105","messageId":"106","endLine":15,"endColumn":13},{"ruleId":"103","severity":1,"message":"132","line":18,"column":9,"nodeType":"105","messageId":"106","endLine":18,"endColumn":14},{"ruleId":"103","severity":1,"message":"133","line":18,"column":16,"nodeType":"105","messageId":"106","endLine":18,"endColumn":24},{"ruleId":"103","severity":1,"message":"134","line":19,"column":9,"nodeType":"105","messageId":"106","endLine":19,"endColumn":17},{"ruleId":"103","severity":1,"message":"135","line":19,"column":19,"nodeType":"105","messageId":"106","endLine":19,"endColumn":30},{"ruleId":"103","severity":1,"message":"136","line":35,"column":17,"nodeType":"105","messageId":"106","endLine":35,"endColumn":23},{"ruleId":"103","severity":1,"message":"134","line":59,"column":10,"nodeType":"105","messageId":"106","endLine":59,"endColumn":18},{"ruleId":"103","severity":1,"message":"137","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":13},{"ruleId":"103","severity":1,"message":"138","line":12,"column":12,"nodeType":"105","messageId":"106","endLine":12,"endColumn":26},{"ruleId":"103","severity":1,"message":"139","line":13,"column":12,"nodeType":"105","messageId":"106","endLine":13,"endColumn":28},{"ruleId":"103","severity":1,"message":"140","line":14,"column":11,"nodeType":"105","messageId":"106","endLine":14,"endColumn":24},{"ruleId":"103","severity":1,"message":"141","line":17,"column":10,"nodeType":"105","messageId":"106","endLine":17,"endColumn":16},{"ruleId":"103","severity":1,"message":"142","line":24,"column":11,"nodeType":"105","messageId":"106","endLine":24,"endColumn":24},{"ruleId":"143","severity":1,"message":"144","line":24,"column":46,"nodeType":"145","messageId":"146","endLine":24,"endColumn":48},{"ruleId":"103","severity":1,"message":"147","line":34,"column":15,"nodeType":"105","messageId":"106","endLine":34,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":34,"column":44,"nodeType":"145","messageId":"146","endLine":34,"endColumn":46},{"ruleId":"148","severity":1,"message":"149","line":46,"column":8,"nodeType":"150","endLine":46,"endColumn":10,"suggestions":"151"},{"ruleId":"103","severity":1,"message":"152","line":2,"column":35,"nodeType":"105","messageId":"106","endLine":2,"endColumn":52},{"ruleId":"103","severity":1,"message":"153","line":16,"column":11,"nodeType":"105","messageId":"106","endLine":16,"endColumn":16},{"ruleId":"103","severity":1,"message":"154","line":19,"column":11,"nodeType":"105","messageId":"106","endLine":19,"endColumn":19},{"ruleId":"103","severity":1,"message":"155","line":43,"column":12,"nodeType":"105","messageId":"106","endLine":43,"endColumn":23},{"ruleId":"103","severity":1,"message":"156","line":43,"column":25,"nodeType":"105","messageId":"106","endLine":43,"endColumn":39},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'App' is defined but never used.","'ReactWebComponent' is defined but never used.","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"'Testing' is defined but never used.","'Switch' is defined but never used.","'useParams' is defined but never used.","'WordLimit' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.",["157"],["158"],"'data2' is assigned a value but never used.","'setData2' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'data' is assigned a value but never used.","'music' is assigned a value but never used.","'setMusic' is assigned a value but never used.","'duration' is assigned a value but never used.","'setDuration' is assigned a value but never used.","'Series' is assigned a value but never used.","'axios' is defined but never used.","'seriesDuration' is assigned a value but never used.","'featuresDuration' is assigned a value but never used.","'durationArray' is assigned a value but never used.","'active' is assigned a value but never used.","'currentSeries' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'currentData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'FlyToInterpolator' is defined but never used.","'width' is assigned a value but never used.","'styleMap' is assigned a value but never used.","'currentSong' is assigned a value but never used.","'setCurrentSong' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},"Update the dependencies array to be: [data]",{"range":"162","text":"163"},[1645,1647],"[data]"]